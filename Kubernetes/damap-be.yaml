apiVersion: v1
kind: Service
metadata:
  name: damap-be
spec:
  selector:
      app: damap-be
  ports:
    - protocol: TCP
      port: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: damap-be
spec:
  selector:
    matchLabels:
      app: damap-be
  replicas: 1
  template:
    metadata:
      labels:
        app: damap-be
        ID: "damap_be_service_id"
    spec:
      containers:
      - name: damap-be
        image: ghcr.io/tuwien-csd/damap-backend:next
        imagePullPolicy: Always
        command: []
        resources:
          limits:
            memory: 4096Mi
            cpu: "2"
        stdin: true
        tty: true
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /q/health/live
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 15
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /q/health/live
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 15
          failureThreshold: 5
      initContainers:
      - name: api-mock
        image: busybox
        command: ['sh', '-c', 'until nslookup api-mock.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for api-mock; sleep 2; done;']
      - name: fits-service
        image: busybox
        command: ['sh', '-c', 'until nslookup fits-service.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for fits-service; sleep 2; done;']
      - name: keycloak
        image: curlimages/curl
        command: ["curl", "-I", "-s", "-o", "/dev/null", "https://auth.acdh.oeaw.ac.at"]


